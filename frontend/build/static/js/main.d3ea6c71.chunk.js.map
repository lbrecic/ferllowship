{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ea6c71.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render() {\r\n    return ( \r\n    <div className=\"inputField\" >\r\n        <input className=\"input\" \r\n        type = {this.props.type}\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.value}\r\n        onChange = { (e) => this.props.onChange(e.target.value)}\r\n        >\r\n        </input>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return ( \r\n    <div className=\"submitButton\" >\r\n        <button className=\"btn\"\r\n        disabled={this.props.disabled}\r\n        onClick={ () => this.props.onClick()}>\r\n          {this.props.text}\r\n        </button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      [property]:val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled:true\r\n    })\r\n\r\n    try{\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept' : 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body : JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if(result  && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n    <div className=\"loginForm\" >\r\n        <div className='title'>\r\n        GeoFighter\r\n        </div>\r\n        \r\n        \r\n        <InputField  \r\n          type='text'\r\n          placeholder='Korisničko ime'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n\r\n        />\r\n\r\n        <InputField  \r\n          type='password'\r\n          placeholder='Lozinka'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n\r\n        />\r\n\r\n        <SubmitButton \r\n          text='Prijavi se'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n\r\n        <div className=\"register\">\r\n          \r\n          Nemaš račun?        \r\n        </div>\r\n        <SubmitButton \r\n          text='Registriraj se'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n        \r\n\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React        from 'react';\nimport UserStore    from './stores/UserStore';\nimport LoginForm    from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport {observer}   from 'mobx-react';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount(){\n    try{\n\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers : {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }else{\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout(){\n    try{\n\n      let res = await fetch('/logout',{\n        method: 'post',\n        headers : {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success){\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  render() {\n    if(UserStore.loading){\n      return (\n        <div className=\"app\" >\n           <div className=\"container\"> \n           Ucitavanje...\n           </div>\n        </div>\n      )\n    }else{\n\n      if(UserStore.isLoggedIn){\n        return (\n          <div className=\"app\" >\n             <div className=\"container\"> \n              Pozdrav, {UserStore.username}!\n              <SubmitButton text={'Log out'} \n              disabled={false} \n              onClick={() => this.doLogout()}>\n              </SubmitButton>\n             </div>\n          </div>\n        )\n      }\n\n      return ( \n        <div className=\"app\" >\n          <div className=\"container\">\n             \n            <LoginForm />\n            \n          </div>\n        </div>\n        );\n    }\n\n    \n  }\n}\n\nexport default observer(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}